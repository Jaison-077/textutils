{"version":3,"sources":["components/Navbar.js","components/About.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","Mode","to","title","type","id","aboutText","onClick","toggleMode","htmlFor","navmode","About","myStyle","color","mode","backgroundColor","fontSize","borderRadius","border","borderColor","style","TextForm","prop","useState","text","setText","heading","value","onChange","event","console","log","target","rows","disabled","length","newText","toUpperCase","toLowerCase","split","join","document","getElementById","select","navigator","clipboard","writeText","showAlert","filter","element","propType","propTypes","string","isRequired","defaultProps","Alert","height","alert","role","msg","App","setMode","navMode","setnavMode","setAlert","message","setTimeout","serviceText","body","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.034531cb.chunk.js","sourcesContent":["import React from \"react\";\r\nimport propTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\nimport './Navbar.css';\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <>\r\n      <nav className={`navbar navbar-expand-lg navbar-${props.Mode} bg-${props.Mode}`}>\r\n        <div className=\"container-fluid\">\r\n          <Link className=\"navbar-brand\" to=\"/\">\r\n            {props.title}\r\n          </Link>\r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-bs-toggle=\"collapse\"\r\n            data-bs-target=\"#navbarNavDropdown\"\r\n            aria-controls=\"navbarNavDropdown\"\r\n            aria-expanded=\"false\"\r\n            aria-label=\"Toggle navigation\"\r\n          >\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse custom\" id=\"navbarNavDropdown\">\r\n            <ul className=\"navbar-nav\">\r\n              <li className=\"nav-item\">\r\n                <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">\r\n                  Home\r\n                </Link>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <Link className=\"nav-link\" to=\"/about\">\r\n                  {props.aboutText}\r\n                </Link>\r\n              </li>\r\n            </ul>\r\n              <div className={`form-check form-switch text-${props.Mode === 'light'?'dark':'light'}`}>\r\n                <div></div>\r\n                <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" id=\"flexSwitchCheckDefault\"/>\r\n                <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\" >Enable {props.navmode} Mode</label>\r\n              </div>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    </>\r\n  );\r\n}\r\n\r\nNavbar.propType = {\r\n  title: propTypes.string.isRequired,\r\n  aboutText: propTypes.string\r\n};\r\n\r\nNavbar.defaultProps={\r\n  title: 'Nithiindcbfd',\r\n  aboutText:'Lol'\r\n};","// import React,{useState} from 'react'\r\n\r\nexport default function About(props) {\r\n\r\n    // const [myStyle,setMyStyle] = useState({\r\n    //     color: 'black',\r\n    //     backgroundColor: 'white',\r\n    //     border: '1px solid white',\r\n    //     border_radius: '10px'\r\n    // })\r\n\r\n    let myStyle ={\r\n        color: props.mode === 'dark'?'white':'black',\r\n        backgroundColor: props.mode === 'dark'?'#000000':'white',\r\n        fontSize:'20px',\r\n        // border:'2px solid '\r\n        borderRadius:'5px',\r\n        border:'2px solid',\r\n        borderColor: props.mode === 'dark'?'white':'#787878'\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"container my-5\">\r\n                <h1 className=\"my-2\">About Us</h1>\r\n                        <div className=\"accordion\" id=\"accordionExample\">\r\n            <div className=\"accordion-item\">\r\n                <h2 className=\"accordion-header\" id=\"headingOne\" >\r\n                <button className=\"accordion-button\" style={myStyle} type=\"button\"  data-bs-toggle=\"collapse\" data-bs-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\" >\r\n                   <strong> Analyse Your text</strong>\r\n                </button>\r\n                </h2>\r\n                <div id=\"collapseOne\" className=\"accordion-collapse collapse show\" aria-labelledby=\"headingOne\" data-bs-parent=\"#accordionExample\" >\r\n                <div className=\"accordion-body\" style={myStyle}>\r\n                    Textutils gives you a way to analyze your text quickly and effictively. Be it word count, character count or\r\n                </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"accordion-item\">\r\n                <h2 className=\"accordion-header\" id=\"headingTwo\">\r\n                <button className=\"accordion-button collapsed\" style={myStyle} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseTwo\" aria-expanded=\"false\" aria-controls=\"collapseTwo\">\r\n                   <strong> Free to use</strong>\r\n                </button>\r\n                </h2>\r\n                <div id=\"collapseTwo\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingTwo\" data-bs-parent=\"#accordionExample\">\r\n                <div className=\"accordion-body\" style={myStyle}>\r\n                    Textutils is a free character counter tool that provides instant character count & word count statistics for a given text. Textutils reports the number of words and characters. Thus it is suitable for writing text with word/ character limit.\r\n                </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"accordion-item\">\r\n                <h2 className=\"accordion-header\" id=\"headingThree\">\r\n                <button className=\"accordion-button collapsed\" style={myStyle} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseThree\" aria-expanded=\"false\" aria-controls=\"collapseThree\">\r\n                   <strong> Browser Compatible</strong>\r\n                </button>\r\n                </h2>\r\n                <div id=\"collapseThree\" className=\"accordion-collapse collapse\"  aria-labelledby=\"headingThree\" data-bs-parent=\"#accordionExample\">\r\n                <div className=\"accordion-body\" style={myStyle}>\r\n                    This word counter software works in any web browsers such as Chrome, Firefox, Internet Explorer, Safari, Opera. It suits to count characters in facebook, blog, books, excel document, pdf document, essays, etc.\r\n                </div>\r\n                </div>\r\n            </div>\r\n            </div>\r\n                {/* <div className=\"container my-3\">\r\n                    <button type=\"button\" className=\"btn btn-primary\" onClick={toogleStyle}>{btnText}</button>\r\n                </div> */}\r\n        </div>\r\n    )\r\n}\r\n","import React,{useState} from 'react'\r\nimport './Navbar.css';\r\n\r\nexport default function TextForm(prop) {\r\n    \r\n    const[text,setText] = useState('');\r\n\r\n    const handleUpClick=()=>{\r\n        // console.log(\"Uppercase was clicked\"+text);\r\n\r\n        \r\n        let newText = text.toUpperCase();\r\n        setText(newText);\r\n    }\r\n    const handleLoClick=()=>{\r\n        let newText=text.toLowerCase();\r\n        setText(newText);\r\n    }\r\n    \r\n    const handleClearTextClick=()=>{\r\n        setText('');\r\n    }\r\n\r\n\r\n    //     COPY TEXT \r\n    const handleCopy=()=>{\r\n        var text = document.getElementById(\"MyBox\");\r\n        text.select();\r\n        navigator.clipboard.writeText(text.value);\r\n        prop.showAlert('copied to clipboard','success');\r\n    }\r\n\r\n    //Remove Extra Spaces\r\n    const handleExtraSpaces=()=>{\r\n        let newText=text.split(/[ ]+/);\r\n        setText(newText.join(\" \"));\r\n    }\r\n\r\n\r\n    // const handleSortTextClick=()=>{\r\n    //     // let newText = new String(text);\r\n    //     let newText = text;\r\n    //     setText(newText);\r\n    // }\r\n    const handleOnChange=(event)=>{\r\n        console.log(\"on Change\");\r\n        setText(event.target.value);\r\n    }\r\n    // setText('JAISON')\r\n\r\n    return (\r\n        <>\r\n            <div className=\"container\">\r\n            <h1>{prop.heading}</h1>\r\n            <div className=\"mb-3\">\r\n            {/* <label htmlFor=\"MyBox\" className=\"form-label\">Example textarea</label> */}\r\n            <textarea className=\"form-control\" id=\"MyBox\" value={text} onChange={handleOnChange} rows=\"10\" style={{backgroundColor: prop.Mode==='dark'?'#262626':'white',color: prop.Mode==='dark'?'white':'black'}}></textarea>\r\n                <div className=\"My__box\">\r\n                        <button disabled={text.length===0} className=\"btn btn-primary mt-2\" onClick={handleUpClick}>Convert to Uppercase</button> \r\n                        <button disabled={text.length===0} className=\"btn btn-primary mt-2\" onClick={handleLoClick}>Convert to lowerCase</button>\r\n                        <button disabled={text.length===0} className=\"btn btn-primary mt-2\" onClick={handleExtraSpaces}>Remove Extra Spaces</button>\r\n                        <button disabled={text.length===0} className=\"btn btn-primary mt-2\" onClick={handleClearTextClick}>Clear Text</button>\r\n                        <button disabled={text.length===0} className=\"btn btn-primary mt-2\" onClick={handleCopy}>CopyText</button>\r\n                </div>\r\n            </div>\r\n            </div>\r\n\r\n            <div className=\"container my-3\">\r\n                <h1>Your text summary</h1>\r\n                <p>{text.split(' ').filter((element)=>{return element.length!==0}).length} words {text.length} characters</p>\r\n                <p>{0.008*text.split('').length} Minutes Read</p>\r\n                <h2>Preview</h2>\r\n                <p>{text.length>0?text:\"Nothing to preview !\"}</p>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nconst Alert = (props) => {\r\n    return (\r\n        \r\n        <div style={{height:'50px'}}>\r\n        {props.alert && \r\n            <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n                {/* <strong>{props.alert.type}</strong>: */}{props.alert.msg}\r\n                {/* <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button> */}\r\n            </div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Alert\r\n","// import logo from './logo.svg';\nimport './App.css';\nimport Navbar from'./components/Navbar';\nimport About from './components/About';\nimport TextForm from './components/TextForm';\nimport Alert from './components/Alert';\nimport React,{useState} from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\n\n\n\nfunction App() {\n  const [Mode, setMode] = useState('light') //Whether Dark mode is enable\n  const [navMode, setnavMode] = useState('dark')\n  const [alert, setAlert] = useState(null)\n\n  const showAlert=(message,type)=>{\n      setAlert({\n        msg: message,\n        type: type\n      })\n      setTimeout(() => {\n        setAlert(null)\n      }, 2500);\n  }\n\n  const toggleMode=()=>{\n    if(Mode === 'light')\n    {\n      setMode('dark');\n      setnavMode('light');\n      document.body.style.backgroundColor = '#000000';\n      document.body.style.color = 'white';\n      showAlert('Dark Mode Enabled.','success');\n    }\n    else\n    {\n      setMode('light');\n      setnavMode('dark');\n      document.body.style.backgroundColor = 'white';\n      document.body.style.color = '#000000';\n      showAlert('Light Mode Enabled.','success');\n    }\n  }\n\n  return (\n    <div>\n        <Router>\n        \n          <Navbar title=\"TextUtils\" aboutText=\"About\" serviceText=\"Services\" Mode={Mode} toggleMode={toggleMode} navmode={navMode}/>\n          <Alert alert={alert}/>\n\n          {/* <div className=\"container my-3\">\n            <TextForm heading=\"Enter paragraph to analyse below\" Mode={Mode} showAlert={showAlert}/>\n            \n          </div>  */}\n\n              <Switch>\n                <Route exact path=\"/about\">\n                  <About mode={Mode}/>\n                </Route>\n                <Route exact path=\"/\">\n                    <div className=\"container my-3\">\n                    <TextForm heading=\"TextUtils - Word Counter, Character Counter, Remove extra spaces\" Mode={Mode} showAlert={showAlert}/>\n                  </div>\n                </Route>\n              </Switch>\n        </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}